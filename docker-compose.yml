version: '3.9'

x-base_service:
  &base_service
  ports:
    - "7860:7860"
  volumes:
    - &v1 ./data:/data
    - &v2 /richfast-jfs/sd/output:/output
    - &v3 /richfast-jfs/sd/input:/input
    - &v4 ./data-dreambooth:/stable-diffusion-webui/models/dreambooth
    - &v5 ./data-dreambooth:/dreambooth-output
    - &v6 /richfast-jfs/dreambooth-checkpoints:/dreambooth-checkpoints
    - &v7 /richfast-jfs/dreambooth-checkpoints:/data/StableDiffusion
  deploy:
    resources:
      reservations:
        devices:
          - driver: nvidia
            count: all
            capabilities: [ gpu ]

name: webui-docker

services:
  download:
    build: ./services/download/
    profiles: [ "download" ]
    restart: "no"
    volumes:
      - *v1

  auto-t4:
    <<: *base_service
    profiles: [ "auto-t4" ]
    image: brandnewx/automatic1111:latest
    restart: "always"
    environment:
      - CLI_ARGS=--allow-code --medvram --xformers --force-enable-xformers --opt-split-attention --enable-insecure-extension-access --administrator --disable-safe-unpickle

  auto:
    &automatic
    <<: *base_service
    profiles: [ "auto" ]
    image: brandnewx/automatic1111:latest
    restart: "always"
    environment:
      - CLI_ARGS=--allow-code --opt-split-attention --enable-insecure-extension-access --administrator --disable-safe-unpickle

  dreambooth:
    &dreambooth
    <<: *base_service
    profiles: [ "dreambooth" ]
    image: brandnewx/dreambooth:latest
    restart: "no"
    environment:
      - INSTANCE_DIR=${INSTANCE_DIR:-/input/skssks}
      - MODEL_NAME=${MODEL_NAME:-skssks}
      - OUTPUT_DIR=/dreambooth-output
      - MAX_TRAIN_STEPS=${MAX_TRAIN_STEPS:-2000}
      - TEXT_ENCODER_STEPS=${TEXT_ENCODER_STEPS:-800}
      - SAVE_STARTING_STEPS=${SAVE_STARTING_STEPS:-1500}
      - SAVE_N_STEPS=${SAVE_N_STEPS:-500}
      - SEED=${SEED:-1337}
      - KEEP_DIFFUSERS_MODEL=${KEEP_DIFFUSERS_MODEL:-0}
      - SAVE_INTERMEDIARY_DIRS=${SAVE_INTERMEDIARY_DIRS:-0}
      - CACHE_DIR=${CACHE_DIR:-/dreambooth-output/.cache}
      - CHECKPOINT_DIR=${CHECKPOINT_DIR:-/dreambooth-checkpoints}
      - HF_TOKEN=${HF_TOKEN:-}
      - MODEL_PATH=${MODEL_PATH:-runwayml/stable-diffusion-v1-5}
      - MODEL_COMMIT=${MODEL_COMMIT:-51b78538d58bd5526f1cf8e7c03c36e2799e0178} # half sample size
      # - MODEL_COMMIT=${MODEL_COMMIT:-63534535d4730d5976c5c647a7f2adaea1102f5b}  # main
      - VAE_PATH=${VAE_PATH-stabilityai/sd-vae-ft-mse}
      # - VAE_PATH=${VAE_PATH-}
      - VAE_COMMIT=${VAE_COMMIT-07d70db1bb648cea307cb6b9e32a50c8655a08e7}
      - SCHEDULER_NAME=${SCHEDULER_NAME:-PRETRAINED}
      - LEARNING_RATE=${LEARNING_RATE:-0.000002}
      - CLASSES_ROOT_DIR=${CLASSES_ROOT_DIR:-/input/classes}
      - NUM_CLASS_IMAGES=${NUM_CLASS_IMAGES:-1000}
      - SUBFOLDER_MODE=${SUBFOLDER_MODE:-0}

  auto-cpu:
    <<: *automatic
    profiles: [ "auto-cpu" ]
    deploy: {}
    restart: "always"
    environment:
      - CLI_ARGS=--no-half --precision full

  sygil:
    &sygil
    <<: *base_service
    profiles: [ "sygil" ]
    build: ./services/sygil/
    image: sd-sygil:14
    environment:
      - CLI_ARGS=--optimized-turbo
      - USE_STREAMLIT=0

  sygil-sl:
    <<: *sygil
    profiles: [ "sygil-sl" ]
    environment:
      - USE_STREAMLIT=1

  invoke:
    <<: *base_service
    profiles: [ "invoke" ]
    build: ./services/invoke/
    image: sd-invoke:12
    environment:
      - PRELOAD=true
      - CLI_ARGS=
